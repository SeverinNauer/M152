{"version":3,"sources":["pages/Index.tsx","components/CodeExample.tsx","components/ContentBox.tsx","pages/animations/CssAnimations.tsx","pages/animations/SvgAnimations.tsx","pages/animations/SrollActivated.tsx","pages/copyright/Impressum.tsx","pages/animations/HtmlCanvas.tsx","components/TableCard.tsx","pages/fileformat/Sounds.tsx","pages/concept/StyleGuide.tsx","pages/fileformat/ImageFormat.tsx","pages/concept/Timeline.tsx","Content.tsx","components/DrawerContent.tsx","components/SearchInput.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["useStyles","makeStyles","theme","createStyles","root","Index","classes","className","codeIcon","marginLeft","code","display","flexDirection","CodeExample","props","useState","isOpen","setIsOpen","useEffect","console","log","Prism","languages","highlightAll","Tooltip","title","aria-label","placement","IconButton","onClick","Collapse","in","Card","children","margin","breakpoints","up","width","ContentBox","transform","card","padding","marginTop","box","backgroundColor","palette","primary","main","height","animation","CssAnimations","Typography","variant","svgContent","rectangle","fill","transformOrigin","transformBox","SvgAnimations","y","origin","viewBox","rotate","attributeName","from","to","dur","values","keyTimes","repeatCount","attributeType","type","overflowY","boxContent","textAlign","hello","ScrollActivated","undefined","target","setTarget","trigger","useScrollTrigger","threshold","ref","t","Slide","direction","Impressum","overflowX","canvas","HtmlCanvas","useRef","useTheme","canvasSize","useMediaQuery","down","drawFace","ctx","radius","beginPath","arc","Math","PI","fillStyle","lineWidth","stroke","drawNumbers","ang","num","font","textBaseline","translate","fillText","toString","drawTime","now","Date","hour","getHours","minute","getMinutes","second","getSeconds","drawHand","pos","length","lineCap","moveTo","lineTo","current","getContext","halfHeight","interval","setInterval","shadowBlur","shadowColor","grey","drawClock","clearInterval","TableCard","styled","marginBottom","audio","SoundFormats","Type","Compression","Support","Quality","Size","Sounds","Table","TableHead","TableRow","TableCell","TableBody","map","format","key","controls","src","process","mainColor","text","color","contrastText","StyleGuide","Link","href","component","gutterBottom","Formats","Abbreviation","Format","Extension","image","gif","maxWidth","gifCard","ImageFormat","alt","Timeline","plugins","dayGridPlugin","timeGridPlugin","momentPlugin","initialView","headerToolbar","left","center","right","titleFormat","allDaySlot","slotLabelFormat","slotMinTime","dayHeaderFormat","firstDay","drawerWidth","MenuItems","Name","Selected","Route","SubItems","Component","Content","Toolbar","exact","path","item","subItem","drawerContainer","overflow","nested","paddingLeft","spacing","ListItemLink","selected","renderLink","React","useMemo","forwardRef","itemProps","ListItem","button","ListItemText","primaryTypographyProps","DrawerContent","menuItems","setMenuItems","history","useHistory","getMenuItemsFromLacation","useCallback","location","pathname","includes","sub","unlisten","listen","items","find","Expanded","List","index","Fragment","expanded","mItem","setExpanded","unmountOnExit","disablePadding","search","position","borderRadius","shape","fade","common","white","searchIcon","alignItems","justifyContent","inputInput","SearchInput","InputBase","placeholder","input","inputProps","Root","MuiIconButton","Box","toolbar","menuButton","drawer","flexShrink","drawerPaper","boxShadow","divider","border","appbar","zIndex","modal","link","textDecoration","App","menuIsOpen","setMenuIsOpen","localStorage","getItem","removeItem","push","smDown","AppBar","Hidden","mdUp","rel","Drawer","paper","open","onBackdropClick","Boolean","window","hostname","match","createMuiTheme","background","default","ReactDOM","render","StrictMode","ThemeProvider","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.5160ade0.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { makeStyles, createStyles } from \"@material-ui/core\";\r\nconst useStyles = makeStyles((theme) =>\r\n  createStyles({\r\n    root: {},\r\n  })\r\n);\r\nconst Index = () => {\r\n  const classes = useStyles();\r\n  return <div className={classes.root}>Welcome</div>;\r\n};\r\n\r\nexport default Index;\r\n","import {\r\n  Card,\r\n  Collapse,\r\n  createStyles,\r\n  IconButton,\r\n  makeStyles,\r\n  Tooltip,\r\n} from \"@material-ui/core\";\r\nimport CodeIcon from \"@material-ui/icons/Code\";\r\nimport Prism from \"prismjs\";\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n  createStyles({\r\n    codeIcon: {\r\n      marginLeft: \"auto\",\r\n    },\r\n    code: {\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n    },\r\n  })\r\n);\r\n\r\nconst CodeExample: React.FC = (props) => {\r\n  const classes = useStyles();\r\n\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  useEffect(() => {\r\n    console.log(Prism.languages);\r\n    Prism.highlightAll();\r\n  }, []);\r\n\r\n  return (\r\n    <div className={classes.code}>\r\n      <Tooltip\r\n        title=\"Quellcode anzeigen\"\r\n        aria-label=\"show source\"\r\n        placement=\"top\"\r\n      >\r\n        <IconButton\r\n          className={classes.codeIcon}\r\n          onClick={() => setIsOpen(!isOpen)}\r\n        >\r\n          <CodeIcon />\r\n        </IconButton>\r\n      </Tooltip>\r\n      <Collapse in={isOpen}>\r\n        <Card>\r\n          <pre>\r\n            <code className=\"language-tsx\">{props.children}</code>\r\n          </pre>\r\n        </Card>\r\n      </Collapse>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CodeExample;\r\n","import React from \"react\";\r\nimport { makeStyles, createStyles } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n  createStyles({\r\n    root: {\r\n      margin: \"20px auto\",\r\n      [theme.breakpoints.up(\"xs\")]: {\r\n        width: \"95%\"\r\n      },\r\n      [theme.breakpoints.up(\"sm\")]: {\r\n        width: \"90%\"\r\n      },\r\n      [theme.breakpoints.up(\"md\")]: {\r\n        width: \"80%\"\r\n      },\r\n      [theme.breakpoints.up(\"lg\")]: {\r\n        width: \"75%\"\r\n      },\r\n      [theme.breakpoints.up(\"xl\")]: {\r\n        width: \"70%\"\r\n      }\r\n    },\r\n  })\r\n);\r\n\r\nconst ContentBox: React.FC = (props) => {\r\n  const classes = useStyles();\r\n  return <div className={classes.root}>{props.children}</div>;\r\n};\r\n\r\nexport default ContentBox;\r\n","import { Card, createStyles, makeStyles, Typography } from \"@material-ui/core\";\r\nimport Prism from \"prismjs\";\r\nimport React, { useEffect } from \"react\";\r\nimport CodeExample from \"../../components/CodeExample\";\r\nimport ContentBox from \"../../components/ContentBox\";\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n  createStyles({\r\n    \"@keyframes spinning\": {\r\n      \"0%\": { marginLeft: \"0\" },\r\n      \"50%\": { marginLeft: \"100%\", transform: \"rotate(1080deg)\" },\r\n      \"100%\": { marginLeft: \"0\" },\r\n    },\r\n    card: {\r\n      padding: 40,\r\n      marginTop: 20,\r\n    },\r\n    box: {\r\n      backgroundColor: theme.palette.primary.main,\r\n      height: 20,\r\n      width: 20,\r\n      animation: \"$spinning 5s linear infinite\",\r\n    },\r\n    codeIcon: {\r\n      marginLeft: \"auto\",\r\n    },\r\n    code: {\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n    },\r\n  })\r\n);\r\n\r\nconst CssAnimations = () => {\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    Prism.highlightAll();\r\n  }, []);\r\n\r\n  return (\r\n    <ContentBox>\r\n      <Typography variant=\"h4\">CSS Animation</Typography>\r\n      <Typography variant=\"h5\">\r\n        Untenstehend sind Beispiele für CSS Animationen zu finden\r\n      </Typography>\r\n      <br></br>\r\n      <Typography variant=\"h6\">Einfache CSS Animation</Typography>\r\n      <Card className={classes.card} variant=\"outlined\">\r\n        <div className={classes.box} />\r\n      </Card>\r\n      <CodeExample>\r\n        {`import React from \"react\";\r\nimport { Card, createStyles, makeStyles } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n  createStyles({\r\n    \"@keyframes spinning\": {\r\n      \"0%\": { marginLeft: \"0\" },\r\n      \"50%\": { marginLeft: \"100%\", transform: \"rotate(1080deg)\" },\r\n      \"100%\": { marginLeft: \"0\" },\r\n    },\r\n    card: {\r\n      padding: 40,\r\n      marginTop: 20,\r\n    },\r\n    box: {\r\n      backgroundColor: theme.palette.primary.main,\r\n      height: 20,\r\n      width: 20,\r\n      animation: \"$spinning 5s linear infinite\",\r\n    },\r\n  })\r\n);\r\n        \r\nconst CssAnimations = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card className={classes.card} variant=\"outlined\">\r\n      <div className={classes.box}/>\r\n    </Card>\r\n  )\r\n};`}\r\n      </CodeExample>\r\n    </ContentBox>\r\n  );\r\n};\r\n\r\nexport default CssAnimations;\r\n","import React from \"react\";\r\nimport ContentBox from \"../../components/ContentBox\";\r\nimport { Typography, Card, makeStyles, createStyles } from \"@material-ui/core\";\r\nimport CodeExample from \"../../components/CodeExample\";\r\nconst useStyles = makeStyles((theme) =>\r\n  createStyles({\r\n    card: {\r\n      padding: 40,\r\n      marginTop: 20,\r\n    },\r\n    svgContent: {\r\n      height: 30,\r\n      width: \"100%\",\r\n    },\r\n    rectangle: {\r\n      fill: theme.palette.primary.main,\r\n      transformOrigin: \"center\",\r\n      transformBox: \"fill-box\",\r\n    },\r\n  })\r\n);\r\n\r\nconst SvgAnimations = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <ContentBox>\r\n      <Typography variant=\"h4\">SVG Animation</Typography>\r\n      <Typography variant=\"h5\">\r\n        Untenstehend sind Beispiele für SVG Animationen zu finden\r\n      </Typography>\r\n      <Typography variant=\"h6\">Einfache SVG Animation</Typography>\r\n      <Card className={classes.card} variant=\"outlined\">\r\n        <svg className={classes.svgContent}>\r\n          <rect\r\n            y={5}\r\n            className={classes.rectangle}\r\n            width={20}\r\n            height={20}\r\n            origin=\"center\"\r\n            viewBox=\"fill-content\"\r\n            rotate=\"20\"\r\n          >\r\n            <animate\r\n              attributeName=\"x\"\r\n              from=\"0\"\r\n              to=\"0\"\r\n              dur=\"5s\"\r\n              values=\"0;100%;0\"\r\n              keyTimes=\"0;0.5;1\"\r\n              repeatCount=\"indefinite\"\r\n            />\r\n            <animateTransform\r\n              attributeName=\"transform\"\r\n              attributeType=\"XML\"\r\n              type=\"rotate\"\r\n              from=\"0\"\r\n              to=\"0\"\r\n              dur=\"5s\"\r\n              values=\"0;1080;0\"\r\n              keyTimes=\"0;0.5;1\"\r\n              repeatCount=\"indefinite\"\r\n            />\r\n          </rect>\r\n        </svg>\r\n      </Card>\r\n      <CodeExample>\r\n        {`import React from \"react\";\r\nimport { Card, createStyles, makeStyles } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n  createStyles({\r\n    card: {\r\n      padding: 40,\r\n      marginTop: 20,\r\n    },\r\n    svgContent: {\r\n      height: 30,\r\n      width: \"100%\",\r\n    },\r\n    rectangle: {\r\n      fill: theme.palette.primary.main,\r\n      transformOrigin: \"center\",\r\n      transformBox: \"fill-box\",\r\n    },\r\n  })\r\n);\r\n        \r\nconst SvgAnimations = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Card className={classes.card} variant=\"outlined\">\r\n      <svg className={classes.svgContent}>\r\n        <rect\r\n          y={5}\r\n          className={classes.rectangle}\r\n          width={20}\r\n          height={20}\r\n          origin=\"center\"\r\n          viewBox=\"fill-content\"\r\n          rotate=\"20\"\r\n        >\r\n          <animate\r\n            attributeName=\"x\"\r\n            from=\"0\"\r\n            to=\"0\"\r\n            dur=\"5s\"\r\n            values=\"0;100%;0\"\r\n            keyTimes=\"0;0.5;1\"\r\n            repeatCount=\"indefinite\"\r\n          />\r\n          <animateTransform\r\n            attributeName=\"transform\"\r\n            attributeType=\"XML\"\r\n            type=\"rotate\"\r\n            from=\"0\"\r\n            to=\"0\"\r\n            dur=\"5s\"\r\n            values=\"0;1080;0\"\r\n            keyTimes=\"0;0.5;1\"\r\n            repeatCount=\"indefinite\"\r\n          />\r\n        </rect>\r\n      </svg>\r\n    </Card>\r\n  );\r\n};`}\r\n      </CodeExample>\r\n    </ContentBox>\r\n  );\r\n};\r\n\r\nexport default SvgAnimations;\r\n","import {\r\n  Card,\r\n  createStyles,\r\n  makeStyles,\r\n  Slide,\r\n  Typography,\r\n  useScrollTrigger,\r\n} from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport ContentBox from \"../../components/ContentBox\";\r\nimport CodeExample from \"../../components/CodeExample\";\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n  createStyles({\r\n    card: {\r\n      padding: 40,\r\n      marginTop: 20,\r\n      height: 500,\r\n      overflowY: \"auto\",\r\n    },\r\n    box: {\r\n      backgroundColor: theme.palette.primary.main,\r\n      height: 20,\r\n      width: 20,\r\n    },\r\n    boxContent: {\r\n      height: 800,\r\n      width: \"100%\",\r\n      textAlign: \"center\",\r\n    },\r\n    hello: {\r\n      marginTop: 300,\r\n    },\r\n  })\r\n);\r\n\r\nconst ScrollActivated = () => {\r\n  const classes = useStyles();\r\n  const [target, setTarget] = useState<any>(undefined);\r\n  const trigger = useScrollTrigger({ target: target, threshold: 0 });\r\n  return (\r\n    <ContentBox>\r\n      <Typography variant=\"h4\">Scroll activated Animationen</Typography>\r\n      <Typography variant=\"h5\">\r\n        Untenstehend sind Beispiele für Scroll activated Animationen\r\n      </Typography>\r\n      <br></br>\r\n      <Typography variant=\"h6\">Einfache scroll activated Animation</Typography>\r\n      <Card\r\n        className={classes.card}\r\n        variant=\"outlined\"\r\n        ref={(t) => t && setTarget(t)}\r\n      >\r\n        <div className={classes.boxContent}>\r\n          <Slide direction={\"left\"} in={!trigger}>\r\n            <Typography>Scroll Down</Typography>\r\n          </Slide>\r\n          <Slide direction={\"right\"} in={trigger}>\r\n            <Typography className={classes.hello}>\r\n              Hello fellow scroll enthusiast\r\n            </Typography>\r\n          </Slide>\r\n        </div>\r\n      </Card>\r\n      <CodeExample>{`import {\r\n  Card,\r\n  createStyles,\r\n  makeStyles,\r\n  Slide,\r\n  Typography,\r\n  useScrollTrigger,\r\n} from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n  createStyles({\r\n    card: {\r\n      padding: 40,\r\n      marginTop: 20,\r\n      height: 500,\r\n      overflowY: \"auto\",\r\n    },\r\n    box: {\r\n      backgroundColor: theme.palette.primary.main,\r\n      height: 20,\r\n      width: 20,\r\n    },\r\n    boxContent: {\r\n      height: 800,\r\n      width: \"100%\",\r\n      textAlign: \"center\",\r\n    },\r\n    hello: {\r\n      marginTop: 300,\r\n    },\r\n  })\r\n);\r\n\r\nconst ScrollActivated = () => {\r\n  const classes = useStyles();\r\n  const [target, setTarget] = useState(undefined);\r\n  const trigger = useScrollTrigger({ target: target, threshold: 0 });\r\n  return (\r\n    <Card\r\n        className={classes.card}\r\n        variant=\"outlined\"\r\n        ref={(t) => t && setTarget(t)}>\r\n        <div className={classes.boxContent}>\r\n          <Slide direction={\"left\"} in={!trigger}>\r\n            <Typography>Scroll Down</Typography>\r\n          </Slide>\r\n          <Slide direction={\"right\"} in={trigger}>\r\n            <Typography className={classes.hello}>\r\n              Hello fellow scroll enthusiast\r\n            </Typography>\r\n          </Slide>\r\n        </div>\r\n    </Card>\r\n  );\r\n};`}</CodeExample>\r\n    </ContentBox>\r\n  );\r\n};\r\n\r\nexport default ScrollActivated;\r\n","import React from \"react\";\r\nimport ContentBox from \"../../components/ContentBox\";\r\nimport { Typography } from \"@material-ui/core\";\r\n\r\nconst Impressum = () => {\r\n  return (\r\n    <ContentBox>\r\n      <Typography variant=\"h4\">Impressum</Typography>\r\n      <br/>\r\n      <Typography variant=\"h5\">Kontaktadresse</Typography>\r\n      <Typography variant=\"body2\">Severin Nauer</Typography>\r\n      <Typography variant=\"body2\">Bodmern 2</Typography>\r\n      <Typography variant=\"body2\">8847 Egg</Typography>\r\n      <Typography variant=\"body2\">Schweiz</Typography>\r\n      <Typography variant=\"body2\">severin.nauer@gmail.com</Typography>\r\n    </ContentBox>\r\n  );\r\n};\r\n\r\nexport default Impressum;\r\n","import {\r\n  Card,\r\n  createStyles,\r\n  makeStyles,\r\n  Typography,\r\n  useTheme,\r\n  useMediaQuery,\r\n  Theme,\r\n} from \"@material-ui/core\";\r\nimport React, { useEffect, useRef } from \"react\";\r\nimport ContentBox from \"../../components/ContentBox\";\r\nimport CodeExample from \"../../components/CodeExample\";\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n  createStyles({\r\n    card: {\r\n      padding: 40,\r\n      marginTop: 20,\r\n      display: \"flex\",\r\n      overflowX: \"auto\",\r\n    },\r\n    canvas: {\r\n      margin: \"0 auto\",\r\n    },\r\n  })\r\n);\r\n\r\nconst HtmlCanvas = () => {\r\n  const classes = useStyles();\r\n  const canvas = useRef<HTMLCanvasElement>(null);\r\n  const theme = useTheme();\r\n\r\n  const isMobile = useMediaQuery((theme: Theme) =>\r\n    theme.breakpoints.down(\"sm\")\r\n  );\r\n\r\n  const canvasSize = isMobile ? 300 : 400;\r\n\r\n  useEffect(() => {\r\n    const drawClock = (ctx: CanvasRenderingContext2D, radius: number) => {\r\n      ctx.shadowBlur = 3;\r\n      ctx.shadowColor = theme.palette.grey[800];\r\n      ctx.lineCap = \"round\";\r\n      drawFace(ctx, radius);\r\n      drawNumbers(ctx, radius);\r\n      drawTime(ctx, radius);\r\n    };\r\n\r\n    const drawFace = (ctx: CanvasRenderingContext2D, radius: number) => {\r\n      ctx.beginPath();\r\n      ctx.arc(0, 0, radius, 0, 2 * Math.PI);\r\n      ctx.fillStyle = \"white\";\r\n      ctx.fill();\r\n      ctx.lineWidth = radius * 0.05;\r\n      ctx.stroke();\r\n      ctx.beginPath();\r\n      ctx.fillStyle = \"#333\";\r\n      ctx.fill();\r\n    };\r\n\r\n    const drawNumbers = (ctx: CanvasRenderingContext2D, radius: number) => {\r\n      var ang;\r\n      var num;\r\n      ctx.font = radius * 0.15 + \"px arial\";\r\n      ctx.textBaseline = \"middle\";\r\n      ctx.textAlign = \"center\";\r\n      for (num = 1; num < 13; num++) {\r\n        ang = (num * Math.PI) / 6;\r\n        ctx.rotate(ang);\r\n        ctx.translate(0, -radius * 0.85);\r\n        ctx.rotate(-ang);\r\n        ctx.fillText(num.toString(), 0, 0);\r\n        ctx.rotate(ang);\r\n        ctx.translate(0, radius * 0.85);\r\n        ctx.rotate(-ang);\r\n      }\r\n    };\r\n\r\n    const drawTime = (ctx: CanvasRenderingContext2D, radius: number) => {\r\n      var now = new Date();\r\n      var hour = now.getHours();\r\n      var minute = now.getMinutes();\r\n      var second = now.getSeconds();\r\n      //hour\r\n      hour = hour % 12;\r\n      hour =\r\n        (hour * Math.PI) / 6 +\r\n        (minute * Math.PI) / (6 * 60) +\r\n        (second * Math.PI) / (360 * 60);\r\n      drawHand(ctx, hour, radius * 0.5, radius * 0.07);\r\n      //minute\r\n      minute = (minute * Math.PI) / 30 + (second * Math.PI) / (30 * 60);\r\n      drawHand(ctx, minute, radius * 0.8, radius * 0.07);\r\n      // second\r\n      second = (second * Math.PI) / 30;\r\n      drawHand(ctx, second, radius * 0.9, radius * 0.02);\r\n    };\r\n\r\n    const drawHand = (\r\n      ctx: CanvasRenderingContext2D,\r\n      pos: number,\r\n      length: number,\r\n      width: number\r\n    ) => {\r\n      ctx.beginPath();\r\n      ctx.lineWidth = width;\r\n      ctx.lineCap = \"round\";\r\n      ctx.moveTo(0, 0);\r\n      ctx.rotate(pos);\r\n      ctx.lineTo(0, -length);\r\n      ctx.stroke();\r\n      ctx.rotate(-pos);\r\n    };\r\n    const ctx = canvas.current?.getContext(\"2d\");\r\n    if (ctx) {\r\n      const halfHeight = canvasSize / 2;\r\n      ctx.translate(halfHeight, halfHeight);\r\n      const radius = halfHeight * 0.9;\r\n      const interval = setInterval(() => drawClock(ctx, radius), 1000);\r\n      return () => clearInterval(interval);\r\n    }\r\n  }, [canvas, theme.palette.grey, canvasSize]);\r\n\r\n  return (\r\n    <ContentBox>\r\n      <Typography variant=\"h4\">HTML Canvas Animation</Typography>\r\n      <Typography variant=\"h5\">\r\n        Untenstehend sind Beispiele für HTML Canvas Animation zu finden\r\n      </Typography>\r\n      <br></br>\r\n      <Typography variant=\"h6\">HTML Canvas Analog Uhr</Typography>\r\n      <Card className={classes.card} variant=\"outlined\">\r\n        <canvas\r\n          height={canvasSize}\r\n          width={canvasSize}\r\n          className={classes.canvas}\r\n          ref={canvas}\r\n        ></canvas>\r\n      </Card>\r\n      <CodeExample>\r\n        {`import {\r\n  Card,\r\n  createStyles,\r\n  makeStyles,\r\n  useTheme,\r\n  useMediaQuery,\r\n  Theme,\r\n} from \"@material-ui/core\";\r\nimport React, { useEffect, useRef } from \"react\";\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n  createStyles({\r\n    card: {\r\n      padding: 40,\r\n      marginTop: 20,\r\n      display: \"flex\",\r\n      overflowX: \"auto\",\r\n    },\r\n    canvas: {\r\n      margin: \"0 auto\",\r\n    },\r\n  })\r\n);\r\n\r\nconst HtmlCanvas = () => {\r\n  const classes = useStyles();\r\n  const canvas = useRef<HTMLCanvasElement>(null);\r\n  const theme = useTheme();\r\n\r\n  const isMobile = useMediaQuery((theme: Theme) =>\r\n    theme.breakpoints.down(\"sm\")\r\n  );\r\n\r\n  const canvasSize = isMobile ? 300 : 400;\r\n\r\n  useEffect(() => {\r\n    const drawClock = (ctx: CanvasRenderingContext2D, radius: number) => {\r\n      ctx.shadowBlur = 3;\r\n      ctx.shadowColor = theme.palette.grey[800];\r\n      ctx.lineCap = \"round\";\r\n      drawFace(ctx, radius);\r\n      drawNumbers(ctx, radius);\r\n      drawTime(ctx, radius);\r\n    };\r\n\r\n    const drawFace = (ctx: CanvasRenderingContext2D, radius: number) => {\r\n      ctx.beginPath();\r\n      ctx.arc(0, 0, radius, 0, 2 * Math.PI);\r\n      ctx.fillStyle = \"white\";\r\n      ctx.fill();\r\n      ctx.lineWidth = radius * 0.05;\r\n      ctx.stroke();\r\n      ctx.beginPath();\r\n      ctx.fillStyle = \"#333\";\r\n      ctx.fill();\r\n    };\r\n\r\n    const drawNumbers = (ctx: CanvasRenderingContext2D, radius: number) => {\r\n      var ang;\r\n      var num;\r\n      ctx.font = radius * 0.15 + \"px arial\";\r\n      ctx.textBaseline = \"middle\";\r\n      ctx.textAlign = \"center\";\r\n      for (num = 1; num < 13; num++) {\r\n        ang = (num * Math.PI) / 6;\r\n        ctx.rotate(ang);\r\n        ctx.translate(0, -radius * 0.85);\r\n        ctx.rotate(-ang);\r\n        ctx.fillText(num.toString(), 0, 0);\r\n        ctx.rotate(ang);\r\n        ctx.translate(0, radius * 0.85);\r\n        ctx.rotate(-ang);\r\n      }\r\n    };\r\n\r\n    const drawTime = (ctx: CanvasRenderingContext2D, radius: number) => {\r\n      var now = new Date();\r\n      var hour = now.getHours();\r\n      var minute = now.getMinutes();\r\n      var second = now.getSeconds();\r\n      //hour\r\n      hour = hour % 12;\r\n      hour =\r\n        (hour * Math.PI) / 6 +\r\n        (minute * Math.PI) / (6 * 60) +\r\n        (second * Math.PI) / (360 * 60);\r\n      drawHand(ctx, hour, radius * 0.5, radius * 0.07);\r\n      //minute\r\n      minute = (minute * Math.PI) / 30 + (second * Math.PI) / (30 * 60);\r\n      drawHand(ctx, minute, radius * 0.8, radius * 0.07);\r\n      // second\r\n      second = (second * Math.PI) / 30;\r\n      drawHand(ctx, second, radius * 0.9, radius * 0.02);\r\n    };\r\n\r\n    const drawHand = (\r\n      ctx: CanvasRenderingContext2D,\r\n      pos: number,\r\n      length: number,\r\n      width: number\r\n    ) => {\r\n      ctx.beginPath();\r\n      ctx.lineWidth = width;\r\n      ctx.lineCap = \"round\";\r\n      ctx.moveTo(0, 0);\r\n      ctx.rotate(pos);\r\n      ctx.lineTo(0, -length);\r\n      ctx.stroke();\r\n      ctx.rotate(-pos);\r\n    };\r\n    const ctx = canvas.current?.getContext(\"2d\");\r\n    if (ctx) {\r\n      const halfHeight = canvasSize / 2;\r\n      ctx.translate(halfHeight, halfHeight);\r\n      const radius = halfHeight * 0.9;\r\n      const interval = setInterval(() => drawClock(ctx, radius), 1000);\r\n      return () => clearInterval(interval);\r\n    }\r\n  }, [canvas, theme.palette.grey, canvasSize]);\r\n  \r\n  return (\r\n    <Card className={classes.card} variant=\"outlined\">\r\n      <canvas\r\n        height={canvasSize}\r\n        width={canvasSize}\r\n        className={classes.canvas}\r\n        ref={canvas} />\r\n    </Card>\r\n    );\r\n  };`\r\n  }\r\n      </CodeExample>\r\n    </ContentBox>\r\n  );\r\n};\r\n\r\nexport default HtmlCanvas;\r\n","import { Card, styled } from \"@material-ui/core\";\r\n\r\nconst TableCard = styled(Card)({\r\n  marginTop: 20,\r\n  marginBottom: 20,\r\n  overflowX: \"auto\",\r\n});\r\n\r\nexport default TableCard;\r\n","import React from \"react\";\r\nimport ContentBox from \"../../components/ContentBox\";\r\nimport {\r\n  Typography,\r\n  Card,\r\n  makeStyles,\r\n  createStyles,\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableBody,\r\n} from \"@material-ui/core\";\r\nimport TableCard from \"../../components/TableCard\";\r\nimport CodeExample from \"../../components/CodeExample\";\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n  createStyles({\r\n    card: {\r\n      padding: 40,\r\n      marginTop: 20,\r\n      display: \"flex\",\r\n    },\r\n    audio: {\r\n      margin: \"auto\",\r\n    },\r\n  })\r\n);\r\n\r\ntype SoundFormat = {\r\n  Type: string;\r\n  Compression: string;\r\n  Support: string;\r\n  Quality: string;\r\n  Size: string;\r\n};\r\nconst SoundFormats: SoundFormat[] = [\r\n  {\r\n    Type: \"MP3\",\r\n    Compression: \"compressed\",\r\n    Support: \"Sehr gut\",\r\n    Quality: \"Hängt von Compression ab\",\r\n    Size: \"Klein\",\r\n  },\r\n  {\r\n    Type: \"OGG\",\r\n    Compression: \"compressed\",\r\n    Support: \"Nicht so gut\",\r\n    Quality: \"Hängt von Compression ab\",\r\n    Size: \"am kleinsten\",\r\n  },\r\n  {\r\n    Type: \"WAV\",\r\n    Compression: \"uncompressed\",\r\n    Support: \"Gut\",\r\n    Quality: \"am Besten\",\r\n    Size: \"Gross\",\r\n  },\r\n];\r\n\r\nconst Sounds = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <ContentBox>\r\n      <Typography variant=\"h4\">Soundformate</Typography>\r\n      <br />\r\n      <Typography variant=\"h6\">Verfügbare Formate</Typography>\r\n      <Typography variant=\"body2\">\r\n        Im Browser sind drei Sound Formate vefügbar. OGG, MP3 und WAV\r\n      </Typography>\r\n      <TableCard>\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Typ</TableCell>\r\n              <TableCell>Compression</TableCell>\r\n              <TableCell>Browser Support</TableCell>\r\n              <TableCell>Qualität</TableCell>\r\n              <TableCell>Grösse</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {SoundFormats.map((format) => (\r\n              <TableRow key={format.Type}>\r\n                <TableCell>{format.Type}</TableCell>\r\n                <TableCell>{format.Compression}</TableCell>\r\n                <TableCell>{format.Support}</TableCell>\r\n                <TableCell>{format.Quality}</TableCell>\r\n                <TableCell>{format.Size}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableCard>\r\n      <Typography variant=\"body2\">\r\n        Empfehlung 2020: <b>MP3</b> (ausser die Soundqualität muss extrem gut\r\n        sein)\r\n      </Typography>\r\n      <br />\r\n      <Typography variant=\"h6\">\r\n        Beispiel für Einbindung einer MP3 datei\r\n      </Typography>\r\n      <Card className={classes.card}>\r\n        <audio controls className={classes.audio}>\r\n          <source\r\n            src={`${process.env.PUBLIC_URL}/assets/fileformats/sound/mp3-demo.mp3`}\r\n            type=\"audio/mpeg\"\r\n          />\r\n        </audio>\r\n      </Card>\r\n      <CodeExample>\r\n        {`<audio controls>\r\n  <source\r\n    src={\\`\\${process.env.PUBLIC_URL}/assets/fileformats/sound/mp3-demo.mp3\\`}\r\n    type=\"audio/mpeg\"\r\n  />\r\n</audio>`}\r\n      </CodeExample>\r\n    </ContentBox>\r\n  );\r\n};\r\n\r\nexport default Sounds;\r\n","import React from \"react\";\r\nimport ContentBox from \"../../components/ContentBox\";\r\nimport {\r\n  Typography,\r\n  Link,\r\n  Card,\r\n  makeStyles,\r\n  createStyles,\r\n  useTheme,\r\n} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n  createStyles({\r\n    card: {\r\n      padding: 40,\r\n      marginTop: 20,\r\n    },\r\n    mainColor: {\r\n      backgroundColor: theme.palette.primary.main,\r\n      height: 100,\r\n      width: 100,\r\n      display: \"flex\",\r\n    },\r\n    text: {\r\n      margin: \"auto\",\r\n      color: theme.palette.primary.contrastText\r\n    },\r\n  })\r\n);\r\n\r\nconst StyleGuide = () => {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  return (\r\n    <ContentBox>\r\n      <Typography variant=\"h4\">Style Guide</Typography>\r\n      <br />\r\n      <Typography variant=\"h5\">Material UI</Typography>\r\n      <Typography variant=\"body1\">\r\n        Diese Seite benutzt{\" \"}\r\n        <Link href=\"https://material.io/develop/web\">Material UI</Link> als\r\n        Grundlage.\r\n      </Typography>\r\n      <br />\r\n      <Typography variant=\"h6\">Komponenten</Typography>\r\n      <Typography variant=\"body1\">\r\n        Als <Link href=\"https://material-ui.com/\">Komponenten Bibliothek</Link>{\" \"}\r\n        wurde die React ausführung für Material UI verwendet. Sie beinhaltet die\r\n        grundlegenden Komponenten und Styles die vom Material UI Style Guide\r\n        definiert sind.\r\n      </Typography>\r\n      <br />\r\n      <Typography variant=\"h5\">Schrift</Typography>\r\n      <Typography variant=\"body1\">\r\n        Als Schriftart wurde die{\" \"}\r\n        <Link href=\"https://material-ui.com/components/typography/#roboto-font-cdn\">\r\n          {\" \"}\r\n          Roboto Schrift\r\n        </Link>{\" \"}\r\n        von Google verwendet. Als Grössen wurden die{\" \"}\r\n        <Link href=\"https://material-ui.com/components/typography/#component\">\r\n          {\" \"}\r\n          Standardmasse{\" \"}\r\n        </Link>{\" \"}\r\n        von dem Material UI theme Verwendet\r\n      </Typography>\r\n\r\n      <Card className={classes.card}>\r\n        <Typography variant=\"h1\" component=\"h2\" gutterBottom>\r\n          h1. Heading\r\n        </Typography>\r\n        <Typography variant=\"h2\" gutterBottom>\r\n          h2. Heading\r\n        </Typography>\r\n        <Typography variant=\"h3\" gutterBottom>\r\n          h3. Heading\r\n        </Typography>\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          h4. Heading\r\n        </Typography>\r\n        <Typography variant=\"h5\" gutterBottom>\r\n          h5. Heading\r\n        </Typography>\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          h6. Heading\r\n        </Typography>\r\n        <Typography variant=\"subtitle1\" gutterBottom>\r\n          subtitle1. Lorem ipsum dolor sit amet, consectetur adipisicing elit.\r\n          Quos blanditiis tenetur\r\n        </Typography>\r\n        <Typography variant=\"subtitle2\" gutterBottom>\r\n          subtitle2. Lorem ipsum dolor sit amet, consectetur adipisicing elit.\r\n          Quos blanditiis tenetur\r\n        </Typography>\r\n        <Typography variant=\"body1\" gutterBottom>\r\n          body1. Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quos\r\n          blanditiis tenetur unde suscipit, quam beatae rerum inventore\r\n          consectetur, neque doloribus, cupiditate numquam dignissimos laborum\r\n          fugiat deleniti? Eum quasi quidem quibusdam.\r\n        </Typography>\r\n        <Typography variant=\"body2\" gutterBottom>\r\n          body2. Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quos\r\n          blanditiis tenetur unde suscipit, quam beatae rerum inventore\r\n          consectetur, neque doloribus, cupiditate numquam dignissimos laborum\r\n          fugiat deleniti? Eum quasi quidem quibusdam.\r\n        </Typography>\r\n        <Typography variant=\"button\" display=\"block\" gutterBottom>\r\n          button text\r\n        </Typography>\r\n        <Typography variant=\"caption\" display=\"block\" gutterBottom>\r\n          caption text\r\n        </Typography>\r\n        <Typography variant=\"overline\" display=\"block\" gutterBottom>\r\n          overline text\r\n        </Typography>\r\n      </Card>\r\n      <br />\r\n      <Typography variant=\"h5\">Farbpalette</Typography>\r\n      <Typography variant=\"h6\">Primärfarbe</Typography>\r\n      <Card className={classes.card}>\r\n        <Typography variant=\"subtitle1\">Main</Typography>\r\n        <br />\r\n        <div className={classes.mainColor}>\r\n          <Typography variant=\"body1\" className={classes.text}>{theme.palette.primary.main}</Typography>\r\n        </div>\r\n      </Card>\r\n    </ContentBox>\r\n  );\r\n};\r\n\r\nexport default StyleGuide;\r\n","import {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  Typography,\r\n  Card,\r\n  makeStyles,\r\n  createStyles,\r\n} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport ContentBox from \"../../components/ContentBox\";\r\nimport TableCard from \"../../components/TableCard\";\r\nimport CodeExample from \"./../../components/CodeExample\";\r\n\r\ntype Format = {\r\n  Abbreviation: string;\r\n  Format: string;\r\n  Extension: string;\r\n};\r\n\r\nconst Formats: Format[] = [\r\n  {\r\n    Abbreviation: \"GIF\",\r\n    Format: \"Graphics Interchange Format\",\r\n    Extension: \".gif\",\r\n  },\r\n  {\r\n    Abbreviation: \"ICO\",\r\n    Format: \"Microsoft Icon\",\r\n    Extension: \".ico, .cur\",\r\n  },\r\n  {\r\n    Abbreviation: \"JPEG\",\r\n    Format: \"Joint Photographic Expert Group image\",\r\n    Extension: \".jpg, .jpeg, .jfif, .pjpeg, .pjp\",\r\n  },\r\n  {\r\n    Abbreviation: \"PNG\",\r\n    Format: \"Portable Network Graphics\",\r\n    Extension: \".png\",\r\n  },\r\n  {\r\n    Abbreviation: \"SVG\",\r\n    Format: \"Scalable Vector Graphics\",\r\n    Extension: \".svg\",\r\n  },\r\n];\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n  createStyles({\r\n    image: {\r\n      width: \"100%\",\r\n      marginBottom: -10,\r\n    },\r\n    gif: {\r\n      width: \"100%\",\r\n      marginBottom: -10,\r\n      [theme.breakpoints.up(\"md\")]: {\r\n        maxWidth: \"60%\",\r\n        margin: \"20px auto\",\r\n      },\r\n    },\r\n    gifCard: {\r\n      display: \"flex\",\r\n    },\r\n  })\r\n);\r\n\r\nconst ImageFormat = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <ContentBox>\r\n      <Typography variant=\"h4\">Bildformate</Typography>\r\n      <br />\r\n      <Typography variant=\"h5\">Gebräuchliche Formate</Typography>\r\n      <TableCard>\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Abkürzung</TableCell>\r\n              <TableCell>Datei Format</TableCell>\r\n              <TableCell>Endungen</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {Formats.map((format) => (\r\n              <TableRow key={format.Abbreviation}>\r\n                <TableCell>{format.Abbreviation}</TableCell>\r\n                <TableCell>{format.Format}</TableCell>\r\n                <TableCell>{format.Extension}</TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableCard>\r\n      <Typography variant=\"h5\">JPEG einbinden</Typography>\r\n      <Card>\r\n        <img\r\n          className={classes.image}\r\n          src={`${process.env.PUBLIC_URL}/assets/fileformats/images/image.jpg`}\r\n          alt=\"Meine Aussicht\"\r\n        />\r\n      </Card>\r\n      <CodeExample>\r\n        {`<Card>\r\n  <img\r\n    className={classes.image}\r\n    src={\\`\\${process.env.PUBLIC_URL}/assets/fileformats/images/image.jpg\\`}\r\n    alt=\"Meine Aussicht\"\r\n  />\r\n</Card>`}\r\n      </CodeExample>\r\n      <br />\r\n      <Typography variant=\"h5\">PNG einbinden</Typography>\r\n      <Card>\r\n        <img\r\n          className={classes.image}\r\n          src={`${process.env.PUBLIC_URL}/assets/fileformats/images/image.png`}\r\n          alt=\"Meine Aussicht\"\r\n        />\r\n      </Card>\r\n      <CodeExample>\r\n        {`<Card>\r\n  <img\r\n    className={classes.image}\r\n    src={\\`\\${process.env.PUBLIC_URL}/assets/fileformats/images/image.png\\`}\r\n    alt=\"Meine Aussicht\"\r\n  />\r\n</Card>`}\r\n      </CodeExample>\r\n      <br />\r\n      <Typography variant=\"h5\">GIF einbinden</Typography>\r\n      <Card className={classes.gifCard}>\r\n        <img\r\n          className={classes.gif}\r\n          src={`${process.env.PUBLIC_URL}/assets/fileformats/images/trump.gif`}\r\n          alt=\"Funny Gif\"\r\n        />\r\n      </Card>\r\n      <CodeExample>\r\n        {`<Card>\r\n  <img\r\n    className={classes.image}\r\n    src={\\`\\${process.env.PUBLIC_URL}/assets/fileformats/images/trump.gif\\`}\r\n    alt=\"Funny Gif\"\r\n  />\r\n</Card>`}\r\n      </CodeExample>\r\n    </ContentBox>\r\n  );\r\n};\r\n\r\nexport default ImageFormat;\r\n","import React from \"react\";\r\nimport ContentBox from \"../../components/ContentBox\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport FullCalendar from \"@fullcalendar/react\";\r\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\r\nimport timeGridPlugin from \"@fullcalendar/timegrid\";\r\nimport momentPlugin from \"@fullcalendar/moment\";\r\n\r\nconst Timeline = () => {\r\n  return (\r\n    <ContentBox>\r\n      <Typography variant=\"h4\">Zeitplan</Typography>\r\n      <br />\r\n      <FullCalendar\r\n        plugins={[dayGridPlugin, timeGridPlugin, momentPlugin]}\r\n        initialView=\"timeGridWeek\"\r\n        headerToolbar={{\r\n          left: \"prev,next\",\r\n          center: \"title\",\r\n          right: \"timeGridWeek,dayGridMonth\",\r\n        }}\r\n        titleFormat={\"DD.MM.yyyy\"}\r\n        allDaySlot={false}\r\n        slotLabelFormat=\"HH:00\"\r\n        slotMinTime=\"06:00:00\"\r\n        dayHeaderFormat=\"dd DD.MM\"\r\n        firstDay={1}\r\n      />\r\n    </ContentBox>\r\n  );\r\n};\r\n\r\nexport default Timeline;\r\n","import { styled, Toolbar } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport { drawerWidth } from \"./App\";\r\nimport Index from \"./pages/Index\";\r\nimport CssAnimations from \"./pages/animations/CssAnimations\";\r\nimport SvgAnimations from \"./pages/animations/SvgAnimations\";\r\nimport ScrollActivated from \"./pages/animations/SrollActivated\";\r\nimport Impressum from \"./pages/copyright/Impressum\";\r\nimport HtmlCanvas from \"./pages/animations/HtmlCanvas\";\r\nimport Sounds from \"./pages/fileformat/Sounds\";\r\nimport StyleGuide from \"./pages/concept/StyleGuide\";\r\nimport ImageFormat from \"./pages/fileformat/ImageFormat\";\r\nimport Timeline from \"./pages/concept/Timeline\";\r\n\r\nconst ContentBox = styled(\"div\")(({ theme }) => ({\r\n  width: `calc(100% - ${drawerWidth}px)`,\r\n  marginLeft: \"auto\",\r\n  [theme.breakpoints.down(\"sm\")]: {\r\n    width: \"100%\",\r\n  },\r\n}));\r\nexport type MenuItem = {\r\n  readonly Name: string;\r\n  readonly SubItems?: ReadonlyArray<MenuItem>;\r\n  readonly Selected: boolean;\r\n  readonly Expanded?: boolean;\r\n  readonly Route?: string;\r\n  readonly Component?: () => JSX.Element;\r\n};\r\nexport const MenuItems: ReadonlyArray<MenuItem> = [\r\n  {\r\n    Name: \"Konzept\",\r\n    Selected: false,\r\n    Route: \"concept\",\r\n    SubItems: [\r\n      { Name: \"Mockup\", Selected: false, Route: \"mock\" },\r\n      {\r\n        Name: \"Style Guide\",\r\n        Selected: false,\r\n        Route: \"style-guide\",\r\n        Component: StyleGuide,\r\n      },\r\n      {\r\n        Name: \"Zeitplan\",\r\n        Selected: false,\r\n        Route: \"timeline\",\r\n        Component: Timeline,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    Name: \"Urheberrecht\",\r\n    Selected: false,\r\n    Route: \"copyright\",\r\n    SubItems: [\r\n      {\r\n        Name: \"Impressum\",\r\n        Selected: false,\r\n        Route: \"impressum\",\r\n        Component: Impressum,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    Name: \"Dateiformate\",\r\n    Selected: false,\r\n    Route: \"fileformat\",\r\n    SubItems: [\r\n      {\r\n        Name: \"Bildformate\",\r\n        Selected: false,\r\n        Route: \"image\",\r\n        Component: ImageFormat,\r\n      },\r\n      {\r\n        Name: \"Soundformate\",\r\n        Selected: false,\r\n        Route: \"sound\",\r\n        Component: Sounds,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    Name: \"Animationen\",\r\n    Selected: false,\r\n    Route: \"animations\",\r\n    SubItems: [\r\n      {\r\n        Name: \"CSS Animation\",\r\n        Selected: false,\r\n        Route: \"css\",\r\n        Component: CssAnimations,\r\n      },\r\n      {\r\n        Name: \"SVG Animation\",\r\n        Selected: false,\r\n        Route: \"svg\",\r\n        Component: SvgAnimations,\r\n      },\r\n      {\r\n        Name: \"Scroll Activated\",\r\n        Selected: false,\r\n        Route: \"scroll-activated\",\r\n        Component: ScrollActivated,\r\n      },\r\n      {\r\n        Name: \"HTML Canvas\",\r\n        Selected: false,\r\n        Route: \"canvas\",\r\n        Component: HtmlCanvas,\r\n      },\r\n    ],\r\n  },\r\n  { Name: \"Automatisierung\", Selected: false },\r\n  { Name: \"Testen\", Selected: false },\r\n  { Name: \"Eigene Entwicklung\", Selected: false },\r\n  { Name: \"Allgemeines\", Selected: false },\r\n];\r\n\r\nconst Content = () => {\r\n  return (\r\n    <ContentBox>\r\n      <Toolbar />\r\n      <Switch>\r\n        <Route exact path=\"/\">\r\n          <Index />\r\n        </Route>\r\n        {MenuItems.map((item) =>\r\n          item.SubItems?.map((subItem) => (\r\n            <Route\r\n              exact\r\n              path={`/${item.Route}/${subItem.Route}`}\r\n              component={subItem.Component}\r\n            />\r\n          ))\r\n        )}\r\n      </Switch>\r\n    </ContentBox>\r\n  );\r\n};\r\n\r\nexport default Content;\r\n","import {\r\n  createStyles,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  makeStyles,\r\n  Collapse,\r\n} from \"@material-ui/core\";\r\nimport React, { useEffect, useState, useCallback } from \"react\";\r\nimport { Link, LinkProps, useHistory } from \"react-router-dom\";\r\nimport { Location } from \"history\";\r\nimport { MenuItems, MenuItem } from \"../Content\";\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n  createStyles({\r\n    drawerContainer: {\r\n      overflow: \"auto\",\r\n    },\r\n    nested: {\r\n      paddingLeft: theme.spacing(4),\r\n    },\r\n  })\r\n);\r\n\r\nconst DrawerContent = () => {\r\n  const classes = useStyles();\r\n  const [menuItems, setMenuItems] = useState(MenuItems);\r\n  const history = useHistory();\r\n\r\n  const getMenuItemsFromLacation = useCallback(\r\n    (location: Location) => {\r\n      return menuItems.map((item) => ({\r\n        ...item,\r\n        Selected: location.pathname.includes(item.Name),\r\n        SubItems: item.SubItems?.map((sub) => ({\r\n          ...sub,\r\n          Selected: location.pathname.includes(`${item.Name}/${sub.Name}`),\r\n        })),\r\n      }));\r\n    },\r\n    [menuItems]\r\n  );\r\n  useEffect(() => {\r\n    let unlisten = history.listen((location) => {\r\n      setMenuItems(getMenuItemsFromLacation(location));\r\n    });\r\n    return () => unlisten && unlisten();\r\n  }, [history, getMenuItemsFromLacation]);\r\n\r\n  useEffect(() => {\r\n    const items = getMenuItemsFromLacation(history.location);\r\n    setMenuItems(\r\n      items?.map((item) =>\r\n        item.SubItems?.find((sub) =>\r\n          history.location.pathname.includes(`${item.Name}/${sub.Name}`)\r\n        )\r\n          ? { ...item, Expanded: true }\r\n          : { ...item }\r\n      )\r\n    );\r\n    // TODO Clean up functionality\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const setExpanded = (item: MenuItem) => (expanded: boolean) => {\r\n    setMenuItems(\r\n      menuItems.map((mItem) =>\r\n        mItem.Name === item.Name ? { ...mItem, Expanded: expanded } : mItem\r\n      )\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className={classes.drawerContainer}>\r\n      <List>\r\n        {menuItems.map((item, index) => (\r\n          <React.Fragment key={index}>\r\n            <ListItem button onClick={() => setExpanded(item)(!item.Expanded)}>\r\n              <ListItemText\r\n                primary={item.Name}\r\n                primaryTypographyProps={{ variant: \"subtitle2\" }}\r\n              />\r\n            </ListItem>\r\n            {item.SubItems && (\r\n              <Collapse in={item.Expanded} unmountOnExit>\r\n                <List component=\"div\" disablePadding>\r\n                  {item.SubItems.map((subItem, index) => (\r\n                    <ListItemLink\r\n                      selected={subItem.Selected}\r\n                      key={index}\r\n                      primary={subItem.Name}\r\n                      className={classes.nested}\r\n                      to={`/${item.Route}/${subItem.Route}`}\r\n                    />\r\n                  ))}\r\n                </List>\r\n              </Collapse>\r\n            )}\r\n          </React.Fragment>\r\n        ))}\r\n      </List>\r\n    </div>\r\n  );\r\n};\r\n\r\ninterface ListItemLinkProps {\r\n  icon?: React.ReactElement;\r\n  primary: string;\r\n  to: string;\r\n  selected?: boolean;\r\n  onClick?: () => void;\r\n  className?: string;\r\n}\r\n\r\nfunction ListItemLink(props: ListItemLinkProps) {\r\n  const { primary, to, selected, className, onClick } = props;\r\n\r\n  const renderLink = React.useMemo(\r\n    () =>\r\n      React.forwardRef<any, Omit<LinkProps, \"to\">>((itemProps, ref) => (\r\n        <Link to={to} ref={ref} {...itemProps} />\r\n      )),\r\n    [to]\r\n  );\r\n\r\n  return (\r\n    <ListItem\r\n      button\r\n      selected={selected}\r\n      className={className}\r\n      component={renderLink}\r\n      onClick={onClick}\r\n    >\r\n      <ListItemText\r\n        primary={primary}\r\n        primaryTypographyProps={{ variant: \"body2\" }}\r\n      />\r\n    </ListItem>\r\n  );\r\n}\r\n\r\nexport default DrawerContent;\r\n","import React from \"react\";\r\nimport { makeStyles, createStyles, fade, InputBase } from \"@material-ui/core\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n  createStyles({\r\n    search: {\r\n      display: \"flex\",\r\n      position: \"relative\",\r\n      borderRadius: theme.shape.borderRadius,\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n      \"&:hover\": {\r\n        backgroundColor: fade(theme.palette.common.white, 0.35),\r\n      },\r\n      margin: theme.spacing(\"auto\", 2),\r\n      width: \"100%\",\r\n    },\r\n    searchIcon: {\r\n      padding: theme.spacing(0, 2),\r\n      height: \"100%\",\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"center\",\r\n      position: \"absolute\",\r\n    },\r\n    inputInput: {\r\n      color: theme.palette.primary.contrastText,\r\n      paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    },\r\n  })\r\n);\r\n\r\nconst SearchInput = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.search}>\r\n      <div className={classes.searchIcon}>\r\n        <SearchIcon />\r\n      </div>\r\n      <InputBase\r\n        placeholder=\"Search…\"\r\n        classes={{\r\n          input: classes.inputInput,\r\n        }}\r\n        inputProps={{ \"aria-label\": \"search\" }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchInput;\r\n","import {\r\n  AppBar,\r\n  createStyles,\r\n  Drawer,\r\n  fade,\r\n  Hidden,\r\n  IconButton as MuiIconButton,\r\n  makeStyles,\r\n  styled,\r\n  Theme,\r\n  Toolbar,\r\n  Typography,\r\n  useMediaQuery,\r\n} from \"@material-ui/core\";\r\nimport Brightness4Icon from \"@material-ui/icons/Brightness4\";\r\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport DrawerContent from \"./components/DrawerContent\";\r\nimport SearchInput from \"./components/SearchInput\";\r\nimport Content from \"./Content\";\r\nimport \"prismjs/components/prism-typescript\";\r\nimport \"prismjs/components/prism-jsx\";\r\nimport \"prismjs/components/prism-tsx\";\r\nimport \"../src/prism-material-dark.css\";\r\n\r\nconst Root = styled(\"div\")({\r\n  height: \"100%\",\r\n  width: \"100%\",\r\n});\r\n\r\nconst IconButton = styled(MuiIconButton)(({ theme }) => ({\r\n  margin: theme.spacing(0, 1),\r\n}));\r\n\r\nconst Box = styled(\"div\")({\r\n  display: \"flex\",\r\n});\r\n\r\nexport const drawerWidth = 240;\r\nconst useStyles = makeStyles((theme) =>\r\n  createStyles({\r\n    search: {\r\n      display: \"flex\",\r\n      position: \"relative\",\r\n      borderRadius: theme.shape.borderRadius,\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n      \"&:hover\": {\r\n        backgroundColor: fade(theme.palette.common.white, 0.35),\r\n      },\r\n      margin: theme.spacing(\"auto\", 2),\r\n      width: \"100%\",\r\n    },\r\n    searchIcon: {\r\n      padding: theme.spacing(0, 2),\r\n      height: \"100%\",\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"center\",\r\n      position: \"absolute\",\r\n    },\r\n    toolbar: {\r\n      display: \"flex\",\r\n      justifyContent: \"space-between\",\r\n    },\r\n    inputInput: {\r\n      color: theme.palette.primary.contrastText,\r\n      paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    },\r\n    title: {\r\n      margin: \"auto 0\",\r\n    },\r\n    menuButton: {\r\n      marginLeft: 0,\r\n    },\r\n    drawer: {\r\n      width: drawerWidth,\r\n      flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n      width: drawerWidth,\r\n      boxShadow: `5px 5px 5px ${theme.palette.divider}`,\r\n      border: \"none\",\r\n    },\r\n    appbar: {\r\n      zIndex: theme.zIndex.drawer + 1,\r\n      [theme.breakpoints.down(\"sm\")]: {\r\n        zIndex: theme.zIndex.modal + 1,\r\n      },\r\n    },\r\n    link: {\r\n      textDecoration: \"none\",\r\n      color: theme.palette.primary.contrastText,\r\n      display: \"inherit\",\r\n    },\r\n  })\r\n);\r\n\r\nconst App = () => {\r\n  const classes = useStyles();\r\n  const [menuIsOpen, setMenuIsOpen] = useState(false);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const path = localStorage.getItem(\"path\");\r\n    if(path){\r\n      localStorage.removeItem(\"path\");\r\n      history.push(path);\r\n    }\r\n  },[history])\r\n  const smDown = useMediaQuery((theme: Theme) => theme.breakpoints.down(\"sm\"));\r\n  return (\r\n    <Root>\r\n      <AppBar className={classes.appbar} position=\"fixed\" color=\"primary\">\r\n        <Toolbar className={classes.toolbar}>\r\n          <Box>\r\n            <Hidden mdUp>\r\n              <IconButton\r\n                className={classes.menuButton}\r\n                aria-label=\"Menu\"\r\n                color=\"inherit\"\r\n                onClick={() => setMenuIsOpen(!menuIsOpen)}\r\n              >\r\n                <MenuIcon />\r\n              </IconButton>\r\n            </Hidden>\r\n            <Link to=\"/\" className={classes.link}>\r\n              <Typography className={classes.title} variant=\"h6\">\r\n                Modul 152 Showcase\r\n              </Typography>\r\n            </Link>\r\n          </Box>\r\n          <Box>\r\n            <Hidden smDown>\r\n              <SearchInput />\r\n            </Hidden>\r\n            <Hidden smDown>\r\n              <IconButton aria-label=\"Set Dark Mode\" color=\"inherit\">\r\n                <Brightness4Icon />\r\n              </IconButton>\r\n            </Hidden>\r\n            <Hidden smDown>\r\n              <a\r\n                className={classes.link}\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n                href=\"https://github.com/SeverinNauer/M152\"\r\n              >\r\n                <IconButton aria-label=\"Github Page\" color=\"inherit\">\r\n                  <GitHubIcon />\r\n                </IconButton>\r\n              </a>\r\n            </Hidden>\r\n          </Box>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        className={classes.drawer}\r\n        variant={smDown ? \"temporary\" : \"persistent\"}\r\n        classes={{ paper: classes.drawerPaper }}\r\n        open={menuIsOpen || !smDown}\r\n        onBackdropClick={() => setMenuIsOpen(false)}\r\n      >\r\n        <Toolbar />\r\n        <DrawerContent />\r\n      </Drawer>\r\n      <Content />\r\n    </Root>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport { ThemeProvider, createMuiTheme } from \"@material-ui/core\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: \"#FF6600\",\r\n      contrastText: \"#FFFFFF\",\r\n    },\r\n    background: {\r\n      default: \"#FFFFFF\",\r\n    },\r\n  },\r\n});\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <ThemeProvider theme={theme}>\r\n        <App />\r\n      </ThemeProvider>\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}